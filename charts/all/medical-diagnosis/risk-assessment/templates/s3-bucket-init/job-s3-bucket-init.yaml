kind: Job
apiVersion: batch/v1
metadata:
  name: bucket-init
  namespace: '{{ .Values.global.xraylab.namespace }}'
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/sync-wave: "15"
spec:
  template:
    metadata:
      name: bucket-init
    spec:
      containers:
        - name: bucket-init
          image: '{{ .Values.jobs.s3_bucket_init.image }}'
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-secret-bck
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-secret-bck
                  key: AWS_SECRET_ACCESS_KEY
            - name: kafka_endpoint
              value: '{{ .Values.kafkaSource.bootstrapserver }}'
            - name: bucket_base_name
              value: '{{ .Values.global.xraylab.s3.bucketBaseName }}'
            - name: endpoint_url
              value: '{{ .Values.kafkaSource.serviceOdfUrl}}'
          volumeMounts:
            - mountPath: /opt/app-root/src/bucket-init.py
              name: bucket-init
              subPath: bucket-init.py
          command:
            - python
            - '/opt/app-root/src/bucket-init.py'
      volumes:
        - name: bucket-init
          configMap:
            name: bucket-init
      dnsPolicy: ClusterFirst
      activeDeadlineSeconds: 900
      restartPolicy: Never
      terminationGracePeriodSeconds: 60
